def input_error(func):
    def inner(*args):
        try:
            return func(*args)
        except KeyError:
            return "Contact not found!"
        except ValueError:
            return "Invalid input!"
        except IndexError:
            return "Invalid command!"
    return inner

contacts = {}

@input_error
def hello_cmd():
    return "How can I help you?"

@input_error
def add_cmd(name, phone):
    contacts[name] = phone
    return "Contact added successfully!"

@input_error
def change_cmd(name,phone):
    print(name, phone)
    if not name and not phone:
        raise IndexError
    if name not in contacts:
        raise KeyError
    contacts[name] = phone
    return "Contact updated successfully!"

@input_error
def phone_cmd(name):
    if name not in contacts:
        raise KeyError
    return f"The phone number for {name} is {contacts[name]}"

@input_error
def show_all_cmd():
    if not contacts:
        return "Contact list is empty!"
    output = "Contacts:\n"
    for name, phone in contacts.items():
        output += f"{name}: {phone}\n"
    return output


def main():
    while True:
        user_input = input("> ").lower()
        user_list = user_input.split(' ')
        
        if user_input == "hello":
            print(hello_cmd())
        elif user_list[0] == "add":
            print(add_cmd(user_list[1], user_list[2]))
        elif user_list[0] == "change":
            print(change_cmd(user_list[1], user_list[2]))
        elif user_list[0] == "phone":
            print(phone_cmd(user_list[1]))
        elif user_input == "show all":
            print(show_all_cmd())
        elif user_input in ["good bye", "close", "exit"]:
            print("Good bye!")
            break
        else:
            print("Invalid command!")

if __name__ == "__main__":
    main()